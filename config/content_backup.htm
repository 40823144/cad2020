<h1>About me</h1>
<p>Hello!!!!!!!我是40823144柯晉瑚。</p>
<p>倉儲:<a href="https://github.com/40823144/cad2020">https://github.com/40823144/cad2020</a></p>
<p><img alt="" height="350" src="/images/image0.gif" width="585"/></p>
<h1>W1</h1>
<p><span>source from <a href="https://40823111.github.io/cad2020/content/W1.html">https://40823111.github.io/cad2020/content/W1.html</a></span></p>
<p><img alt="" height="420" src="/images/1.jpg" width="555"/></p>
<p><img alt="" height="496" src="/images/2.jpg" width="556"/></p>
<p><img alt="" height="499" src="/images/3.jpg" width="560"/></p>
<h2>HW</h2>
<p><strong>Inventor</strong></p>
<p><a href="https://drive.google.com/drive/u/1/folders/1fSzCAKNAGCrrhSTFyAOvPgplmQOEtrv_">雲端圖檔.zip</a></p><h1>W2流程</h1>
<p>用github<span>建立cad2020倉儲。</span></p>
<p><span>網址:<a href="https://github.com/40823144/cad2020">https://github.com/40823144/cad2020</a></span></p>
<h1>W3</h1>
<p>小組分組</p>
<p>cad2020小組表單:<a href="http://mde.tw/cad2020/content/W3.html">http://mde.tw/cad2020/content/W3.html</a></p>
<p>亂數分組參考資料: <a href="http://mde.tw/cp2020/content/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.html">http://mde.tw/cp2020/content/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.html</a></p>
<h1>W4～W6</h1>
<p>填寫自評與互評表單</p>
<p>表單網址:<a href="https://docs.google.com/forms/d/e/1FAIpQLSe_9DoEZOnxBTyMaW0W_W_-jqCk6IaiO7waiLvQUqfFzuU3ig/viewform">https://docs.google.com/forms/d/e/1FAIpQLSe_9DoEZOnxBTyMaW0W_W_-jqCk6IaiO7waiLvQUqfFzuU3ig/viewform</a></p>
<p>教學影片： <iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-bjBPf8abeY" width="560"></iframe></p>
<h2>ssh</h2>
<p>製作鑰匙的指令</p>
<p><code class="dart plain">ssh-keygen -t rsa -b 4096 -C </code><code class="dart string">"使用者學號"</code></p>
<p><img caption="false" height="400" src="/images/SSH.png" width="769"/></p>
<p>把製作好的<span>id_rsa 與 id_rsa.pub 利用 puttygen 轉換成 private key 與 public key</span></p>
<p><span><img alt="" height="62" src="/images/SSH2.png" width="767"/></span></p>
<p><span><img caption="false" height="364" src="/images/SSH3.png" width="800"/></span></p>
<p><span><img alt="" height="31" src="/images/ssh4.png" width="755"/></span></p>
<p><span>修改start.bat的設定</span></p>
<p><span><img alt="" height="916" src="/images/ssh6.png" width="701"/></span></p>
<p><span>將id_sra上的密碼丟到github setting裡的創建new sshkey</span></p>
<p><span><img caption="false" height="406" src="/images/ssh5.png" width="800"/></span></p>
<p><span>修改Y:\tmp\cad2020\.git裡的config設定</span></p>
<p><span><img alt="" height="916" src="/images/ssh7.png" width="702"/></span></p>
<p><span></span>到putty.exe的session設定github.com</p>
<p><span><img alt="" height="542" src="/images/ssh8.png" width="600"/></span></p>
<p><span></span>設定Proxy (隨身系統可不用</p>
<p>設定SSH裡的Auth讀取鑰匙.ppk的位置</p>
<p><img alt="" height="542" src="/images/ssh10.png" width="600"/></p>
<p>之後便可以不輸入帳號密碼進行git push</p>
<p><img alt="" height="577" src="/images/sshend.png" width="1100"/></p>
<p></p>
<h1>W7～W9</h1>
<h4>利用 SciTE 編輯器類解譯 ANSI C 程式</h4>
<p><a href="https://bellard.org/tcc/">https://bellard.org/tcc/ </a>是一個小型的 ANSI C 解譯器, 可以與隨身系統中的 SciTE 結合, 讓工程師利用 ANSI C 程式語言進行電腦輔助設計分析.</p>
<p><span>進行步驟:</span></p>
<ol>
<li><span>下載 <a href="http://download.savannah.gnu.org/releases/tinycc/tcc-0.9.27-win64-bin.zip">tcc-0.9.27-win64-bin.zip</a><span>, 解開壓縮檔案後的目錄為 tcc, 其中包含 tcc.exe, 可以用來編譯 ANSI C 程式, 這個目錄必須放在 y:\ 根目錄中.</span></span></li>
<li><span><span><span>修改start.bat<br/></span></span></span>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">set path_portablegit=%Disk%:\Portablegit\bin;
set path_julia=%Disk%:\julia-1.5.2\bin;
set path_tcc=%Disk%:\tcc\;
 
path=%Disk%:;%path_python%;%path_portablegit%;%path_julia%;%path_tcc%;%path%;</pre>
<br/><span><span><br/><img alt="" height="475" src="/images/ansi1.png" width="511"/></span></span><span><span></span></span><span><span><span></span></span></span><span><span><span><br/>將start.bat 重新啟動, 並在命令列(cmd)中輸入 tcc,出現以下圖狀況即表示啟動命令搜尋路徑已經包含 y:\tcc 目錄.<br/></span></span></span>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">Tiny C Compiler 0.9.27 - Copyright (C) 2001-2006 Fabrice Bellard
Usage: tcc [options...] [-o outfile] [-c] infile(s)...
       tcc [options...] -run infile [arguments...]
General options:
  -c          compile only - generate an object file
  -o outfile  set output filename
  -run        run compiled source
  -fflag      set or reset (with 'no-' prefix) 'flag' (see tcc -hh)
  -Wwarning   set or reset (with 'no-' prefix) 'warning' (see tcc -hh)
  -w          disable all warnings
  -v -vv      show version, show search paths or loaded files
  -h -hh      show this, show more help
  -bench      show compilation statistics
  -           use stdin pipe as infile
  @listfile   read arguments from listfile
Preprocessor options:
  -Idir       add include path 'dir'
  -Dsym[=val] define 'sym' with value 'val'
  -Usym       undefine 'sym'
  -E          preprocess only
Linker options:
  -Ldir       add library path 'dir'
  -llib       link with dynamic or static library 'lib'
  -r          generate (relocatable) object file
  -shared     generate a shared library/dll
  -rdynamic   export all global symbols to dynamic linker
  -soname     set name for shared library to be used at runtime
  -Wl,-opt[=val]  set linker option (see tcc -hh)
Debugger options:
  -g          generate runtime debug info
  -b          compile with built-in memory and bounds checker (implies -g)
  -bt N       show N callers in stack traces
Misc. options:
  -x[c|a|n]   specify type of the next infile
  -nostdinc   do not use standard system include paths
  -nostdlib   do not link with standard crt and libraries
  -Bdir       set tcc's private include/library dir
  -MD         generate dependency file for make
  -MF file    specify dependency file name
  -m32/64     defer to i386/x86_64 cross compiler
Tools:
  create library  : tcc -ar [rcsv] lib.a files
  create def file : tcc -impdef lib.dll [-v] [-o lib.def]</pre>
<p></p>
</li>
<li>
<p>修改 SciTE 編輯器中的 cpp.properties, 讓 Tools -&gt; Go 可以呼叫 tcc.exe 類解譯編輯器中副檔名為 .c 的 ANSI C 程式.</p>
<p>作法為開啟 SciTE 功能表 Options 往下點擊 Open cpp.properties 編輯設定檔案, 並且勾選 View -&gt; Line Number 在編輯器中顯示行號, 針對  476 行之後的設定修改如下:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ccopts=-pedantic -Os
#cc=g++ $(ccopts) -c $(FileNameExt) -o $(FileName).o
#ccc=gcc $(ccopts) -c $(FileNameExt) -o $(FileName).o
cc=y:/tcc/tcc.exe -run
ccc=y:/tcc/tcc.exe -run
 
make.command=make
command.compile.*.c=$(ccc) -std=c99
command.build.*.c=$(make.command)
command.build.*.h=$(make.command)
command.clean.*.c=$(make.command) clean
command.clean.*.h=$(make.command) clean
command.go.*.c=$(cc) $(FileNameExt)
#command.go.*.c=./$(FileName)
# To make the Go command both compile (if needed) and execute, use this setting:</pre>
<p><img alt="" height="179" src="/images/ansi2.png" width="577"/><br/><span></span></p>
</li>
<li>
<p><span>完成上述設定後, 可以在編輯器中納入 hello.c, 並且利用 Tools -&gt; Go 直接進行存檔並且執行.<br/><br/></span></p>
</li>
</ol><h1>----期中期末分界線----</h1>
<p>從期中下一週開始各小組需要利用CoppeliaSim製作一循環機構。</p><h1>W10</h1>
<h4>第一次小組<span>Meeting</span>：</h4>
<h4>決定主題，經討論結果決定設計自動化設備</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FyeuWipzAOM" width="560"></iframe></p><h1>W11</h1>
<h4>第二次小組Meeting:</h4>
<h4>進行分組，分為程式組、機構組以及畫圖組，互相配合設計並在最後進行整合。</h4>
<p><img alt="" height="94" src="/images/分組.png" width="800"/></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FH4uDReMENk" width="560"></iframe></p><h1>W12</h1>
<h4>第三次小組Meeting</h4>
<h4>對機構已經有初步的構思，但覺得不夠複雜，經討論後決定先製作雛形，再在路徑上做補強與更改。</h4>
<h5><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/PoQvveW6IuQ" width="560"></iframe></h5><h1>W13</h1>
<h4>第四次小組Meeting</h4>
<h4>初步機構已經完成並可以作動，但須進行部分小更改，因為時間還有剩餘，將在現機構上進行加強。</h4>
<h5><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xjlzaI-gBtI" width="560"></iframe></h5><h1>W14</h1>
<h4>第五次小組Meeting</h4>
<h4>進行補強與修改</h4>
<h5><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/2Qm9QBx1MCE" width="560"></iframe></h5><h1>W15</h1>
<h4>第六次小組Meeting</h4>
<h4>討論機構作動途中可能會發生的問題，做改善與調整。</h4>
<h5><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9q1hxumPTN8" width="560"></iframe></h5>
<h1>W16</h1>
<h4>第七次小組Meeting</h4>
<h4>機構已全部完成且能循環，每個組員提出自己的貢獻，並由組長進行整理並推送到小組網頁上。</h4>
<h5><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/tzKLhk5V2O8" width="560"></iframe></h5><h1>課程筆記</h1>
<p>工程師需要的兩個特質:1.具有創造性 2.聰明的和精巧的創造</p>
<p>多人網際協同 - 專業定位，無遠弗屆 (國際化)</p>
<p>持續改進 - 分散版本與歷程 (近端 + 雲端)</p>
<p>虛實互動 - 價值導向解決問題 (定性 + 定量 (數學模擬))</p>
<p>機電資軟硬整合 - 買方導向，高度客製化 (適者生存)</p>